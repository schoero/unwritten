export enum TypeKind {
  Any = "Any",
  Array = "Array",
  BigInt = "BigInt",
  BigIntLiteral = "BigIntLiteral",
  Boolean = "Boolean",
  BooleanLiteral = "BooleanLiteral",
  Circular = "Circular",
  ClassType = "Class",
  ConditionalType = "ConditionalType",
  Expression = "Expression",
  FunctionType = "Function",
  InterfaceType = "Interface",
  IntersectionType = "Intersection",
  MappedType = "MappedType",
  Never = "Never",
  Null = "Null",
  Number = "number",
  NumberLiteral = "NumberLiteral",
  ObjectLiteral = "ObjectLiteral",
  ObjectType = "ObjectType",
  Parameter = "Parameter",
  Promise = "Promise",
  Set = "Set",
  SourceFile = "SourceFile",
  TypeQuery = "TypeQuery",
  String = "String",
  StringLiteral = "StringLiteral",
  Symbol = "Symbol",
  TemplateLiteral = "TemplateLiteral",
  Tuple = "Tuple",
  TypeLiteral = "TypeLiteral",
  TypeParameter = "TypeParameter",
  TypeReference = "TypeReference",
  Undefined = "Undefined",
  UnionType = "Union",
  Unknown = "Unknown",
  Unresolved = "Unresolved",
  Void = "Void"
}
