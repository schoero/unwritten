export enum TypeKind {
  Any = "AnyType",
  Array = "ArrayType",
  BigInt = "BigIntType",
  BigIntLiteral = "BigIntLiteralType",
  Boolean = "BooleanType",
  BooleanLiteral = "BooleanLiteralType",
  Circular = "CircularType",
  Class = "ClassType",
  Conditional = "ConditionalType",
  Expression = "ExpressionType",
  Function = "FunctionType",
  IndexedAccess = "IndexedAccessType",
  Interface = "InterfaceType",
  Intersection = "IntersectionType",
  Map = "MapType",
  Mapped = "MappedType",
  Never = "NeverType",
  Null = "NullType",
  Number = "NumberType",
  NumberLiteral = "NumberLiteralType",
  Object = "ObjectType",
  ObjectLiteral = "ObjectLiteralType",
  Parameter = "ParameterType",
  Promise = "PromiseType",
  Set = "SetType",
  String = "StringType",
  StringLiteral = "StringLiteralType",
  Symbol = "SymbolType",
  TemplateLiteral = "TemplateLiteralType",
  Tuple = "TupleType",
  TypeLiteral = "TypeLiteralType",
  TypeParameter = "TypeParameterType",
  TypeQuery = "TypeQueryType",
  TypeReference = "TypeReferenceType",
  Undefined = "UndefinedType",
  Union = "UnionType",
  Unknown = "UnknownType",
  Unresolved = "UnresolvedType",
  Void = "VoidType"
}
