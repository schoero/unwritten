{
  "extends": "@schoero",
  "plugins": ["sort-exports"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2020
      },
      "rules": {
        "@typescript-eslint/no-duplicate-type-constituents": "off",
        "@typescript-eslint/no-restricted-imports": [
          "error", {
            "patterns": [
              {
                "allowTypeImports": false,
                "group": [
                  "test",
                  "node:test"
                ],
                "message": "Import from vitest instead.",
                "name": "test"
              },
              {
                "allowTypeImports": false,
                "group": [
                  "**/entities/*.js",
                  "!**/entities/index.js"
                ],
                "message": "Import from the index file instead.",
                "name": "entities"
              },
              {
                "allowTypeImports": false,
                "group": [
                  "**/types/*.js",
                  "!**/types/index.js"
                ],
                "message": "Import from the index file instead.",
                "name": "types"
              },
              {
                "allowTypeImports": false,
                "group": [
                  "node:*"
                ],
                "message": "Import from the 'unwritten:platform/module-name/node.js' instead.",
                "name": "types"
              },
              {
                "allowTypeImports": true,
                "group": [
                  "typescript"
                ],
                "message": "Use injected dependencies at 'ctx.dependencies' instead.",
                "name": "typescript"
              },
              {
                "allowTypeImports": false,
                "group": [
                  "**/platform/**/*"
                ],
                "message": "Use injected dependencies at 'ctx.dependencies' instead.",
                "name": "platform"
              }
            ]
          }
        ],
        "vitest/no-identical-title": "off"
      }
    },
    {
      "files": [
        "**/typeguards/*.ts",
        "**/utils/*.ts",
        "**/interpreter/shared/jsdoc.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "sort-exports/sort-exports": ["warn", { "sortDir": "asc" }]
      }
    },
    {
      "files": [
        "**/platform/**/node.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "@typescript-eslint/no-restricted-imports": [
          "error", {
            "patterns": [
              {
                "allowTypeImports": true,
                "group": [
                  "!node:*"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "files": [
        "**/*.entry.ts",
        "**/*.test.ts",
        "**/tests/**/*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "@typescript-eslint/no-restricted-imports": [
          "error", {
            "patterns": [
              {
                "allowTypeImports": true,
                "group": [
                  "!typescript",
                  "!**/platform/**/*"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "files": [
        "**/renderer/markup/html/**/*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "@typescript-eslint/no-restricted-imports": [
          "error", {
            "patterns": [
              {
                "group": [
                  "unwritten:renderer:markdown*",
                  "unwritten:renderer:markup/html*",
                  "unwritten:renderer:markup/markdown*",
                  "!unwritten:renderer:html*"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "files": [
        "**/renderer/markup/markdown/**/*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "@typescript-eslint/no-restricted-imports": [
          "error", {
            "patterns": [
              {
                "group": [
                  "unwritten:renderer:html*",
                  "unwritten:renderer:markup/html*",
                  "unwritten:renderer:markup/markdown*",
                  "!unwritten:renderer:markdown*"
                ]
              }
            ]
          }
        ]
      }
    }
  ]
}
